# ============================== INPUTS ================================
input {
  beats {
    id => "from-filebeat"
    port => ${LS_BEATS_PORT:5044}
    host => "0.0.0.0"     # Ensure IPv4 binding
  }
}

# ============================== FILTERS ===============================
filter {

  # Parse CICFlowMeter CSV lines into fields
  if [pipeline] == "cicflowmeter" {
    csv {
      source => "message"
      separator => ","
      autodetect_column_names => true
      skip_header => true
    }
    mutate {
      convert => {
        "Flow Duration" => "float"
        "Flow Bytes/s"  => "float"
        "Flow Packets/s" => "float"
        "Min Packet Length" => "float"
        "Max Packet Length" => "float"
        "Packet Length Mean" => "float"
        "Packet Length Std" => "float"
        "Fwd Packets/s" => "float"
        "Bwd Packets/s" => "float"
      }
      strip => ["Src IP", "Dst IP", "Protocol"]
    }
	}
  }

  }
}

# ============================== OUTPUTS ===============================
output {
  # 1) TRAFFIC → Graylog 
  if [pipeline] == "traffic" {
    # Option A: dedicated gelf output plugin 
    gelf {
      host => "${GRAYLOG_HOST:192.168.56.6}"
      port => ${GRAYLOG_PORT:12201}
      short_message => "%{event_name}"
      
    }

  }

  # 2) CICFlowMeter → API (HTTP POST JSON)
  if [pipeline] == "cicflowmeter" {
    http {
      id => "to-ml-api"
      url => "${API_URL:http://192.168.56.10:8000/ingest}"
      http_method => "post"
      format => "json"
    }
  }

  }
}